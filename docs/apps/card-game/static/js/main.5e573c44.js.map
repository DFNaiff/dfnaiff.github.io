{"version":3,"file":"static/js/main.5e573c44.js","mappings":"oKAIO,IAAKA,EAAW,SAAXA,GAAW,OAAXA,EAAW,mBAAXA,EAAW,qBAAXA,CAAW,MAgBXC,EAAW,SAAXA,GAAW,OAAXA,EAAW,8BAAXA,EAAW,0BAAXA,CAAW,MAcXC,EAAgB,SAAhBA,GAAgB,OAAhBA,EAAgB,gCAAhBA,EAAgB,kCAAhBA,EAAgB,oCAAhBA,EAAgB,kCAAhBA,CAAgB,MAYhBC,EAAe,SAAfA,GAAe,OAAfA,EAAe,+BAAfA,EAAe,qCAAfA,CAAe,MAiBfC,EAAc,SAAdA,GAAc,OAAdA,EAAc,wBAAdA,EAAc,iCAAdA,EAAc,iCAAdA,CAAc,MC/D1B,MAoBE,EAfc,CACVC,UAAW,sDACXC,WAAY,eCYX,MAAMC,EAGDC,YAA2D,KAC3DC,kBAA4B,EACnBC,uBAAyB,EAElCC,WAAAA,GACJC,KAAKC,QAASC,EAAAA,EAAAA,IAAGC,EAAOV,UAAW,CAC/BW,WAAY,CAAC,YAAa,WAC1BC,KAAMF,EAAOT,WACbY,aAAa,EACbC,cAAc,EACdC,qBAAsBR,KAAKF,uBAC3BW,kBAAmB,IACnBC,QAAS,MAGbC,QAAQC,IAAI,mDAAoDT,EAAOV,WAEvEO,KAAKa,sBACT,CAEQA,oBAAAA,GACJb,KAAKC,OAAOa,GAAG,WAAW,KACtBH,QAAQC,IAAI,wBAAyBZ,KAAKC,OAAOc,IACjDf,KAAKH,kBAAoB,CAAC,IAG9BG,KAAKC,OAAOa,GAAG,cAAeE,IAC1BL,QAAQC,IAAI,+BAAgCZ,KAAKC,OAAOc,GAAI,UAAWC,GACxD,yBAAXA,GAEAhB,KAAKC,OAAOgB,SAChB,IAGJjB,KAAKC,OAAOa,GAAG,iBAAkBI,IAC7BP,QAAQO,MAAM,oBAAqBA,GACnClB,KAAKH,oBAEDG,KAAKH,mBAAqBG,KAAKF,yBAC/Ba,QAAQO,MAAM,qCACdlB,KAAKC,OAAOkB,aAChB,IAGJnB,KAAKC,OAAOa,GAAG,aAAcM,IACzBT,QAAQC,IAAI,8BAA+BZ,KAAKC,OAAOc,GAAI,WAAYK,EAAc,IAGzFpB,KAAKC,OAAOa,GAAG,qBAAsBM,IACjCT,QAAQC,IAAI,gCAAiCQ,EAAc,IAG/DpB,KAAKC,OAAOa,GAAGtB,EAAe6B,OAAQC,IAClCX,QAAQC,IAAI,uCAAwCZ,KAAKC,OAAOc,GAAG,GAE3E,CAEA,kBAAcQ,GAIV,OAHK5B,EAAc6B,WACf7B,EAAc6B,SAAW,IAAI7B,GAE1BA,EAAc6B,QACzB,CAEOP,OAAAA,CAAQQ,GAEX,OADAd,QAAQC,IAAI,qCAAsCZ,KAAKC,OAAOc,IACvD,IAAIW,SAAQ,CAACC,EAASC,KACzB,GAAI5B,KAAKC,OAAO4B,UAGZ,OAFAlB,QAAQC,IAAI,oCAAqCZ,KAAKC,OAAOc,SAC7DY,IAIJ3B,KAAKC,OAAOgB,UACZjB,KAAKC,OAAOa,GAAG,WAAW,KACtBH,QAAQC,IAAI,+BAAgCZ,KAAKC,OAAOc,IACxDY,GAAS,IAGb3B,KAAKC,OAAOa,GAAG,iBAAkBI,IAC7BU,EAAOV,EAAM,GACf,GAEV,CAEOY,UAAAA,CAAWL,EAAoBM,GAClC,OAAO,IAAIL,SAAsB,CAACC,EAASC,KACvCjB,QAAQC,IAAI,6CAA8Ca,EACtD,gBAAiBM,GAErB,MAAMrB,EAAUsB,YAAW,KACvBJ,EAAO,IAAIK,MAAM,sBAAsB,GACxC,KAEHjC,KAAKC,OAAOiC,KAAK7C,EAAY8C,YAAa,CAAEV,aAAYM,aAAaK,IACjEzB,QAAQC,IAAI,qCAAsCwB,GAClDC,aAAa3B,GACbiB,EAAQS,EAAS,IAGrBpC,KAAKC,OAAOa,GAAG,SAAUI,IACrBP,QAAQO,MAAM,gBAAiBA,GAC/BU,EAAOV,EAAM,GACf,GAEV,CAEOoB,QAAAA,CAASC,EAAgBd,GAC5B,OAAO,IAAIC,SAA8B,CAACC,EAASC,KAC/CjB,QAAQC,IAAI,uCAAwC2B,EAAQ,cAAed,GAG3E,MAAMf,EAAUsB,YAAW,KACvBJ,EAAO,IAAIK,MAAM,oBAAoB,GACtC,KAEHjC,KAAKC,OAAOiC,KAAK7C,EAAYmD,UAAW,CAAED,SAAQd,eAAeW,IAC7DzB,QAAQC,IAAI,mCAAoCwB,GAChDC,aAAa3B,GACbiB,EAAQS,EAAS,IAIrBpC,KAAKC,OAAOa,GAAG,SAAUI,IACrBP,QAAQO,MAAM,gBAAiBA,GAC/BU,EAAOV,EAAM,GACf,GAEV,CAEOuB,QAAAA,CAASF,GACZ,OAAO,IAAIb,SAASC,IAChB3B,KAAKC,OAAOiC,KAAK5C,EAAiBoD,UAAW,CAAEH,WAAWH,IACtDT,EAAQS,EAAS,GACnB,GAEV,CAEOO,SAAAA,CAAUJ,GACb,OAAO,IAAIb,SAASC,IAChB3B,KAAKC,OAAOiC,KAAK5C,EAAiBsD,WAAY,CAAEL,WAAWH,IACvDT,EAAQS,EAAS,GACnB,GAEV,CAEOS,QAAAA,CAASN,EAAgBO,GAC5B,OAAO,IAAIpB,SAASC,IAChB3B,KAAKC,OAAOiC,KAAK3C,EAAgBwD,UAAW,CAAER,SAAQO,cAAcV,IAChET,EAAQS,EAAS,GACnB,GAEV,CAEOY,WAAAA,CAAYC,GAEftC,QAAQC,IAAI,6CAA8C,CACtDsC,SAAUlD,KAAKC,OAAOc,GACtBoC,OAAQnD,KAAKJ,aAAauD,OAC1BtB,UAAW7B,KAAKC,OAAO4B,YAG3B7B,KAAKC,OAAOmD,OAAM,CAACC,KAAcC,KAC7B3C,QAAQC,IAAI,kBAAmByC,EAAW,aAAcrD,KAAKC,OAAOc,GAAI,QAASuC,EAAK,IAG1FtD,KAAKC,OAAOa,GAAGtB,EAAe6B,OAAQC,IAClCX,QAAQC,IAAI,kCAAmC,CAC3CsC,SAAUlD,KAAKC,OAAOc,GACtBoC,OAAQnD,KAAKJ,aAAauD,OAC1B7B,UAEJ2B,EAAS3B,EAAM,IAGnBtB,KAAKC,OAAOa,GAAG,WAAW,KACtBH,QAAQC,IAAI,oBAAqBZ,KAAKC,OAAOc,GAAG,IAGpDf,KAAKC,OAAOa,GAAG,cAAc,KACzBH,QAAQC,IAAI,sBAAsB,GAE1C,CAEOO,UAAAA,GACHnB,KAAKC,OAAOkB,YAChB,CAEOoC,KAAAA,CAAMC,GACT,OAAO,IAAI9B,SAASC,IAChB3B,KAAKC,OAAOgB,UACZN,QAAQC,IAAI,6BAA8BZ,KAAKC,OAAOc,IAEtDf,KAAKC,OAAOiC,KAAK9C,EAAYqE,MAAO,CAAED,aAAapB,IAC/CzB,QAAQC,IAAI,sCAAuC,CAC/CsC,SAAUlD,KAAKC,OAAOc,GACtBqB,aAEAA,EAASsB,QACT1D,KAAK2D,eAAeH,EAAUpB,EAASe,QAEvCnD,KAAKC,OAAOkB,aAEhBQ,EAAQS,EAAS,GACnB,GAEV,CAEOwB,WAAAA,CAAYrB,EAAgBsB,EAAoBC,GACnD,OAAO,IAAIpC,SAASC,IAChB3B,KAAKC,OAAOiC,KAAK3C,EAAgBwE,aAAc,CAC3CxB,SACAsB,aACAC,eACA1B,IACAT,EAAQS,EAAS,GACnB,GAEV,CAEOuB,cAAAA,CAAeH,EAAkBL,GACpCnD,KAAKJ,YAAc,CAAE4D,WAAUL,SACnC,CAEOa,cAAAA,GACH,OAAOhE,KAAKJ,WAChB,CAEOqE,gBAAAA,GACHjE,KAAKJ,YAAc,IACvB,CAEA,YAAasE,GACLlE,KAAKJ,mBACC,IAAI8B,SAAeC,IACrB3B,KAAKC,OAAOiC,KAAK9C,EAAY+E,OAAQ,CAAC,GAAG,KACrCnE,KAAKiE,mBACLjE,KAAKC,OAAOkB,aACZQ,GAAS,GACX,GAGd,E,aCpQG,MAAMyC,EAA6CA,EAAGC,iBACzD,MAAOb,EAAUc,IAAeC,EAAAA,EAAAA,UAAS,IACnCC,EAAgB7E,EAAc4B,cAyBpC,OACIkD,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,EAAOC,UAAUC,SAAA,EAC1BC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACL,MAAOC,EAAOK,MAAMH,SAAC,0BAC3BC,EAAAA,EAAAA,KAACG,EAAAA,QAAS,CACNP,MAAOC,EAAOO,MACdC,YAAY,sBACZC,MAAO7B,EACP8B,aAAchB,EACdiB,WAAS,KAEbR,EAAAA,EAAAA,KAACS,EAAAA,QAAM,CAACP,MAAM,QAAQQ,QAjCVC,UAChB,GAAKlC,EAASmC,OAKd,IACIhF,QAAQC,IAAI,4BAA6B4C,GACzC,MAAMpB,QAAiBoC,EAAcjB,MAAMC,GACvCpB,EAASsB,SAETc,EAAcb,eAAeH,EAAUpB,EAASe,QAChDxC,QAAQC,IAAI,yCACZyD,EAAWuB,QAAQ,UAEnBjF,QAAQC,IAAI,gBAAiBwB,EAASlB,OAAS,0BAC/C2E,EAAAA,QAAMC,MAAM,eAAgB1D,EAASlB,OAAS,0BAEtD,CAAE,MAAOA,GACL2E,EAAAA,QAAMC,MAAM,QAAS,8BACzB,MAlBID,EAAAA,QAAMC,MAAM,QAAS,0BAkBzB,MAcO,EAITlB,EAASmB,EAAAA,QAAWC,OAAO,CAC7BnB,UAAW,CACPoB,KAAM,EACNC,QAAS,GACTC,eAAgB,UAEpBlB,MAAO,CACHmB,SAAU,GACVC,UAAW,SACXC,aAAc,IAElBnB,MAAO,CACHoB,YAAa,EACbC,YAAa,OACbN,QAAS,GACTI,aAAc,GACdG,aAAc,KC1DTC,EAA4CA,EAAGrC,iBACxD,MAAMG,EAAgB7E,EAAc4B,cAC9BiC,EAAWgB,EAAcR,kBAAkBR,SAiBjD,OACIiB,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,EAAOC,UAAUC,SAAA,EAC1BL,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAACL,MAAOC,EAAO+B,QAAQ7B,SAAA,CAAC,YAAUtB,EAAS,QAChDiB,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,EAAOgC,gBAAgB9B,SAAA,EAChCC,EAAAA,EAAAA,KAACS,EAAAA,QAAM,CAACP,MAAM,cAAcQ,QAnBfoB,KACrBlG,QAAQC,IAAI,iBACZyD,EAAWyC,SAAS,eAAgB,CAAErF,WAAY+B,GAAW,KAkBrDuB,EAAAA,EAAAA,KAACS,EAAAA,QAAM,CAACP,MAAM,YAAYQ,QAffsB,KACnBpG,QAAQC,IAAI,gBACZyD,EAAWyC,SAAS,WAAY,CAAErF,WAAY+B,GAAW,KAcjDuB,EAAAA,EAAAA,KAACS,EAAAA,QAAM,CAACP,MAAM,SAASQ,QAXdC,gBACXlB,EAAcN,SACpBG,EAAWuB,QAAQ,QAAQ,EAS2BoB,MAAM,aAErD,EAITpC,EAASmB,EAAAA,QAAWC,OAAO,CAC7BnB,UAAW,CACPoB,KAAM,EACNC,QAAS,GACTC,eAAgB,UAEpBQ,QAAS,CACLP,SAAU,GACVC,UAAW,SACXC,aAAc,IAElBM,gBAAiB,CACbK,IAAK,MC3CAC,EAAgDA,EACzD3E,SACA4E,aACAC,cACAC,kBAGI5C,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,EAAOC,UAAUC,SAAA,EAC1BC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACL,MAAOC,EAAO0C,SAASxC,SAAC,gBAC9BL,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAAAF,SAAA,CAAC,YAAUuC,MAChB5C,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,EAAO2C,SAASzC,SAAA,EACzBC,EAAAA,EAAAA,KAACS,EAAAA,QAAM,CAACP,MAAM,gBAAgBQ,QAAS0B,IACtCE,GAAe,IACZtC,EAAAA,EAAAA,KAACS,EAAAA,QAAM,CAACP,MAAM,aAAaQ,QAAS2B,UAOlDxC,EAASmB,EAAAA,QAAWC,OAAO,CAC7BnB,UAAW,CACPoB,KAAM,EACNC,QAAS,IAEboB,SAAU,CACNlB,SAAU,GACVoB,WAAY,OACZlB,aAAc,IAElBiB,SAAU,CACNE,cAAe,SACftB,eAAgB,eAChBuB,UAAW,M,wBChCfC,EAAQ,MASL,MAAMC,EAAkCA,EAAGC,OAAMpC,UAASqC,eAC7D,MAcMC,EAAsB,WAAdF,EAAKG,MAAmC,aAAdH,EAAKG,KAE7C,OACIvD,EAAAA,EAAAA,MAACwD,EAAAA,QAAgBC,OAAAC,OAAA,CACbxD,MAAO,CAACC,EAAOiD,KAAMC,GAAYlD,EAAOkD,UAExCM,UAAmC,aACnC3C,QAASA,EACTqC,SAAUA,GAEoB,CAC1BnD,MAAO,CACHC,EAAOiD,KACPC,GAAYlD,EAAOkD,SACnB,CAAEO,OAAQ,aAEjB,CAAAvD,SAAA,EAEDC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACL,MAAO,CAACC,EAAOS,MAAO0C,GAASnD,EAAO0D,SAASxD,SAzBjB,CACxC,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,KAsBc+C,EAAKxC,QAAUwC,EAAKxC,SAElCN,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACL,MAAO,CAACC,EAAOoD,KAAMD,GAASnD,EAAO0D,SAASxD,SAnCxC,CAChByD,OAAQ,SACRC,SAAU,SACVC,MAAO,SACPC,OAAQ,UAgCab,EAAKG,WAEP,EAIrBpD,EAASmB,EAAAA,QAAWC,OAAO,CAC7B6B,KAAM,CACFc,MAAO,GACPC,OAAQ,GACRC,gBAAiB,QACjBpC,aAAc,EACdF,YAAa,EACbC,YAAa,OACbN,QAAS,EACT4C,OAAQ,EACRC,WAAY,SACZ5C,eAAgB,UAEpB2B,SAAU,CACNkB,QAAS,IAEb3D,MAAO,CACHe,SAAU,GACVY,MAAO,SAEXgB,KAAM,CACF5B,SAAU,GACVY,MAAO,SAEXsB,QAAS,CACLtB,MAAO,SCpEFiC,EAAoCA,EAC7CC,YACAzH,aACA0H,WACAC,aACAC,oBAEA,MAAMC,EAAqBJ,EAAUK,OAAOD,mBAEtCE,EADkBN,EAAUK,OAAOE,QAAQH,GAAoBvI,KACzBoI,EACtCO,EAAmBR,EAAUK,OAAOI,kBAAkBD,iBACtDE,EAAOV,EAAUW,SAASD,MAAQ,GAClCE,EAAeZ,EAAUK,OAAOI,kBAAkBG,cAAgB,GAElEC,GADSb,EAAUK,OAAOI,iBACdT,EAAUK,OAAOI,kBAAkBI,WAC/CC,EAAYd,EAAUK,OAAOI,kBAAkBK,UAC/CC,EAAcf,EAAUK,OAAOI,kBAAkBM,YA0IvD,OACIxF,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,EAAOC,UAAUC,SAAA,EAC1BC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACL,MAAOC,EAAOsF,OAAOpF,SACtB4E,EACK,qBACAF,EACI,aACA,eAAeN,EAAUK,OAAOE,QAAQH,GAAoBa,UAE1E1F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,EAAOwF,SAAStF,SAAA,CAvBbuF,MACpB,IAAKL,IAAcC,EAAa,OAAO,KAEvC,MAAMK,EAAkBpB,EAAUK,OAAOE,QAAQc,MAAKC,GAAKA,EAAEzJ,KAAOkJ,KAAcE,KAElF,OACI1F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,EAAO6F,UAAU3F,SAAA,EAC1BC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACL,MAAOC,EAAO8F,WAAW5F,SAAC,iBAChCC,EAAAA,EAAAA,KAAC6C,EAAU,CAACC,KAAMmC,KAClBvF,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAACL,MAAOC,EAAOqF,YAAYnF,SAAA,CAAC,YAAUwF,OACxC,EAcFD,GAxFSM,MAClB,MAAMC,EAAgB1B,EAAUK,OAAOE,QAAQoB,WAAUL,GAAKA,EAAEzJ,KAAOoI,IACjE2B,EAAa5B,EAAUK,OAAOE,QAAQsB,OAGtCC,EAAqBC,IACvB,MAAMC,GAAeD,EAAcL,EAAgBE,GAAcA,EAC3DK,GAASC,KAAKC,GAAG,EAAmB,EAAdH,EAAkBE,KAAKC,GAAKP,EAIxD,MAAO,CACHQ,SAAU,WACVC,KAAM,MACNC,IAAK,MACLC,UAAW,CACP,CAAEC,aAbQ,IAKQN,KAAKO,IAAIR,KAS3B,CAAES,aAdQ,IAMQR,KAAKS,IAAIV,MAUlC,EAGL,OACIpG,EAAAA,EAAAA,KAACL,EAAAA,QAAI,CAACC,MAAOC,EAAOkH,YAAYhH,SAC3BoE,EAAUK,OAAOE,QAAQsC,KAAI,CAACC,EAAQC,KACnC,MAAMC,EAAchD,EAAUK,OAAOI,kBAAkBwC,QAAQ5B,MAC1D6B,GAA6CA,EAAMjD,WAAa6C,EAAOjL,MACzEqL,OAAS,EAEZ,OACI3H,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAEDC,MAAO,CAACC,EAAOyH,WAAYrB,EAAkBiB,IAAQnH,SAAA,EAErDC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACL,MAAO,CACTC,EAAO0H,gBACPN,EAAOjL,KAAOoI,GAAYvE,EAAO2H,mBACnCzH,SACGkH,EAAO7B,QAEZ1F,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAACL,MAAOC,EAAO4H,YAAY1H,SAAA,CAAC,WACpBoH,OAVRF,EAAOjL,GAYT,KAGZ,EA2CF4J,GArIc8B,MACvB,MAAM7B,EAAgB1B,EAAUK,OAAOE,QAAQoB,WAAUL,GAAKA,EAAEzJ,KAAOoI,IACjE2B,EAAa5B,EAAUK,OAAOE,QAAQsB,OAGtC2B,EAAmBzB,IACrB,MAAMC,GAAeD,EAAcL,EAAgBE,GAAcA,EAC3DK,GAASC,KAAKC,GAAG,EAAmB,EAAdH,EAAkBE,KAAKC,GAAKP,EAIxD,MAAO,CACHQ,SAAU,WACVC,KAAM,MACNC,IAAK,MACLC,UAAW,CACP,CAAEC,aAbO,GAKQN,KAAKO,IAAIR,KAS1B,CAAES,aAdO,GAMQR,KAAKS,IAAIV,KAS1B,CAAEwB,OAAQ,GAAGxB,EAAQC,KAAKC,GAAG,SAEpC,EAGL,OACItG,EAAAA,EAAAA,KAACL,EAAAA,QAAI,CAACC,MAAOC,EAAOgI,eAAe9H,UAC/BC,EAAAA,EAAAA,KAACL,EAAAA,QAAI,CAACC,MAAOC,EAAOiI,WAAW/H,SAE1BgF,GAAciC,KAAI,EAAE5C,SAAU2D,EAAcjF,WACzC,MAAMoD,EAAc/B,EAAUK,OAAOE,QAAQoB,WAAUL,GAAKA,EAAEzJ,KAAO+L,IACrE,OACI/H,EAAAA,EAAAA,KAACL,EAAAA,QAAI,CAEDC,MAAO,CAACC,EAAOmI,mBAAoBL,EAAgBzB,IAAcnG,UAEjEC,EAAAA,EAAAA,KAAC6C,EAAU,CAACC,KAAMA,KAHbiF,EAIF,OAIhB,EA+FFL,OAELhI,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,EAAOoI,cAAclI,SAAA,EAC9BC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACL,MAAOC,EAAO0C,SAASxC,SAAC,gBArJtCC,EAAAA,EAAAA,KAACkI,EAAAA,QAAU,CAACC,YAAU,EAACvI,MAAOC,EAAOgF,KAAK9E,SACrC8E,EAAKmC,KAAI,CAAClE,EAAWoE,KAClBlH,EAAAA,EAAAA,KAAC6C,EAAU,CAEPC,KAAMA,EACNpC,QAASA,IAAM+D,GAAmBJ,EAAW6C,IAFxCA,OAyGZzC,GAAoBO,GAAcV,GAEnCtE,EAAAA,EAAAA,KAACL,EAAAA,QAAI,CAACC,MAAOC,EAAOuI,qBAAqBrI,UACrCC,EAAAA,EAAAA,KAACS,EAAAA,QAAM,CACHP,MAAO,UAAUiE,EAAUK,OAAOI,kBAAkByD,WAAa,OAAS,aAC1E3H,QAASA,IAAM4D,EAAc,uBAAwB,CAAC,OALL,UA6CtD,EAITzE,EAASmB,EAAAA,QAAWC,OAAO,CAC7BnB,UAAW,CACPoB,KAAM,GAEViE,OAAQ,CACJ9D,SAAU,GACVE,aAAc,IAElBgB,SAAU,CACNlB,SAAU,GACVoB,WAAY,OACZlB,aAAc,IAElBsG,eAAgB,CACZtB,SAAU,WACV3C,MAAO,OACPC,OAAQ,OACRG,WAAY,SACZ5C,eAAgB,UAEpB0G,WAAY,CACRlE,MAAO,IACPC,OAAQ,IACR0C,SAAU,WACVvC,WAAY,SACZ5C,eAAgB,UAEpBkH,gBAAiB,CACb/B,SAAU,WACV3C,MAAO,OACPC,OAAQ,OACRnC,aAAc,IACdoC,gBAAiB,UACjBtC,YAAa,EACbC,YAAa,WAEjBuG,mBAAoB,CAChBzB,SAAU,WACVvC,WAAY,SACZJ,MAAO,GACPC,OAAQ,KAEZnH,WAAY,CACR2E,SAAU,GACVsB,UAAW,EACXrB,UAAW,SACXoF,UAAW,CAAC,CAAEkB,OAAQ,UAE1BK,cAAe,CACXtF,UAAW,QAEfkC,KAAM,CACF0D,SAAU,EACV1E,OAAQ,IACRtC,aAAc,IAElB6G,qBAAsB,CAClBzF,UAAW,GACXpB,aAAc,IAElB8D,SAAU,CACNnE,KAAM,EACNqF,SAAU,WACViC,eAAgB,IAEpBzB,YAAa,CACTnD,MAAO,IACPC,OAAQ,IACR0C,SAAU,WACVkC,UAAW,UAEfnB,WAAY,CACRf,SAAU,WACVvC,WAAY,SACZF,gBAAiB,2BACjB3C,QAAS,EACTO,aAAc,EACdgH,SAAU,IACVlH,YAAa,EACbC,YAAa,QAEjB8F,gBAAiB,CACblG,SAAU,GACVoB,WAAY,OACZlB,aAAc,GAElBiG,kBAAmB,CACfvF,MAAO,WAEXwF,YAAa,CACTpG,SAAU,GACVY,MAAO,QAEXyD,UAAW,CACPa,SAAU,WACVE,IAAK,GACLkC,MAAO,GACP3E,WAAY,SACZF,gBAAiB,2BACjB3C,QAAS,EACTO,aAAc,EACdF,YAAa,EACbC,YAAa,QAEjBkE,WAAY,CACRtE,SAAU,GACVoB,WAAY,OACZlB,aAAc,GAElB2D,YAAa,CACT7D,SAAU,GACVY,MAAO,OACPU,UAAW,KCnSNiG,EAAwCA,EAAGC,YACpD,MAAM,OAAErL,EAAM,WAAEd,GAAemM,EAAMC,QAC9B3E,EAAW4E,IAAgBvJ,EAAAA,EAAAA,UAAoC,OAC/DwJ,EAAaC,IAAkBzJ,EAAAA,EAAAA,UAA0B,CAC5D0J,KAAM,aACNzE,iBAAiB,IAEfhF,EAAgB7E,EAAc4B,cAEpCZ,QAAQC,IAAI,kCAAmC2B,EAAQ,kBAAmBd,IAE1EyM,EAAAA,EAAAA,YAAU,KACNvN,QAAQC,IAAI,oBACZ4D,EAAcxB,aAAa1B,IACvBX,QAAQC,IAAI,uBAAwBU,GACpCwM,EAAaxM,GAEb0M,GAAeG,GAAIjG,OAAAC,OAAA,GACZgG,EAAK,CACRF,KAA6B,YAAvB3M,EAAMiI,OAAO6E,MAAsB,UAAY,aACrD5E,gBAAiBlI,EAAMiI,OAAOE,QAAQnI,EAAMiI,OAAOD,qBAAqBa,OAAS1I,KAClF,IAGA,KACH+C,EAAcrD,YAAY,IAE/B,IAkBH,OAAK+H,GAKDzE,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,EAAOC,UAAUC,SAAA,EAC1BL,EAAAA,EAAAA,MAACO,EAAAA,QAAI,CAACL,MAAOC,EAAOK,MAAMH,SAAA,CAAC,cAAYvC,KAEjB,eAArBwL,EAAYE,MACTlJ,EAAAA,EAAAA,KAACmC,EAAc,CACX3E,OAAQA,EACR4E,WA3BOkH,KACnB7J,EAAc/B,SAASF,EAAO,EA2BlB6E,YAxBQkH,KACpB9J,EAAc7B,UAAUJ,EAAO,EAwBnB8E,YAAa6B,EAAUK,OAAOE,QAAQsB,UAG1ChG,EAAAA,EAAAA,KAACkE,EAAQ,CACLC,UAAWA,EACXzH,WAAYA,EACZ0H,SAAU3E,EAAcR,kBAAkBb,QAAU,GACpDiG,WA5BQtG,IACpB0B,EAAc3B,SAASN,EAAQO,EAAU,EA4B7BuG,cAzBUkF,CAAC1K,EAAoBC,KAC3CU,EAAcZ,YAAYrB,EAAQsB,EAAYC,EAAW,QAIlDiB,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAAAF,SAAC,cAuBN,EAITF,EAASmB,EAAAA,QAAWC,OAAO,CAC7BnB,UAAW,CACPoB,KAAM,EACNC,QAAS,IAEbjB,MAAO,CACHmB,SAAU,GACVoB,WAAY,OACZlB,aAAc,IAElBgB,SAAU,CACNlB,SAAU,GACVoB,WAAY,OACZlB,aAAc,IAElBiB,SAAU,CACNE,cAAe,MACftB,eAAgB,eAChBG,aAAc,IAElB4D,OAAQ,CACJ9D,SAAU,GACVE,aAAc,IAElBsG,eAAgB,CACZtG,aAAc,IAElBkI,MAAO,CACHlB,SAAU,EACV1E,OAAQ,KAEZoE,cAAe,CACXtF,UAAW,QAEfkC,KAAM,CACF0D,SAAU,EACV1E,OAAQ,KAEZ6F,WAAY,CACR/G,UAAW,M,cCtHnB,MAAMgH,EAA+B,CAAC,YAAa,gBAAiB,SAEvDC,EACTA,EAAEf,QAAOvJ,iBACL1D,QAAQC,IAAI,+BACZD,QAAQC,IAAI,gBAAiBgN,EAAMC,QACnC,MAAM,WAAEpM,GAAemM,EAAMC,OACvBrJ,EAAgB7E,EAAc4B,eAC7BQ,EAAU6M,IAAerK,EAAAA,EAAAA,UAAyB,aAazD,OACIE,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO,CAAEuB,QAAS,IAAKpB,SAAA,EACzBC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACL,MAAO,CAAEyB,SAAU,GAAIE,aAAc,IAAKxB,SAAC,mBACjDL,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO,CAAE2B,aAAc,IAAKxB,SAAA,EAC9BC,EAAAA,EAAAA,KAACC,EAAAA,QAAI,CAACL,MAAO,CAAE2B,aAAc,IAAKxB,SAAC,uBACnCC,EAAAA,EAAAA,KAAC8J,EAAAA,OAAM,CACHC,cAAe/M,EACfgN,cAAgBC,GAA8BJ,EAAYI,GAC1DrK,MAAO,CAAEkE,gBAAiB,UAAW3C,QAAS,IAAKpB,SAElD4J,EAAW3C,KAAKkD,IACblK,EAAAA,EAAAA,KAAC8J,EAAAA,OAAOK,KAAI,CAERC,MAAOF,EAAKrJ,QAAQ,IAAK,KACzBP,MAAO4J,GAFFA,WAOrBlK,EAAAA,EAAAA,KAACS,EAAAA,QAAM,CAACP,MAAM,cAAcQ,QA9BXC,UACrB/E,QAAQC,IAAI,uBACN4D,EAAcvD,QAAQQ,GAC5Bd,QAAQC,IAAI,uBACZ,MAAMwB,QAAiBoC,EAAc1C,WAAWL,EAAYM,GACxDK,EAASsB,SAAWtB,EAASG,SAC7B5B,QAAQC,IAAI,6BACZyD,EAAWyC,SAAS,OAAQ,CAAEvE,OAAQH,EAASG,OAAQd,eAC3D,MAuBO,EC1CN2N,EACTA,EAAExB,QAAOvJ,iBAEL,MAAM,WAAE5C,GAAemM,EAAMC,OACvBrJ,EAAgB7E,EAAc4B,eAC7BgB,EAAQ8M,IAAa9K,EAAAA,EAAAA,UAAS,IAQrC,OACIE,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,EAAOC,UAAUC,SAAA,EAC1BC,EAAAA,EAAAA,KAACG,EAAAA,QAAS,CACNP,MAAOC,EAAOO,MACdC,YAAY,wBACZE,aAAegK,GAASD,EAAUC,MAEtCvK,EAAAA,EAAAA,KAACS,EAAAA,QAAM,CAACP,MAAM,YAAYQ,QAbXC,gBACblB,EAAcvD,QAAQQ,SACtB+C,EAAclC,SAASC,EAAQd,GACrC4C,EAAWyC,SAAS,OAAQ,CAAEvE,SAAQd,cAAa,MAW5C,EAKbmD,EAASmB,EAAAA,QAAWC,OAAO,CAC7BnB,UAAW,CACPoB,KAAM,EACNC,QAAS,GACTC,eAAgB,UAEpBhB,MAAO,CACHoB,YAAa,EACbC,YAAa,OACbN,QAAS,GACTI,aAAc,GACdG,aAAc,GAElBG,gBAAiB,CACbK,IAAK,MCzBPsI,GAAWC,EAAAA,EAAAA,yBACGC,EAAAA,EAAAA,+BCdpBC,EAAAA,EAAAA,UDgBe,WACX,MAAMC,EAAgCJ,EAEtC,OACIxK,EAAAA,EAAAA,KAAC6K,EAAAA,oBAAmB,CAAA9K,UAChBL,EAAAA,EAAAA,MAACkL,EAAME,UAAS,CAACC,iBAAiB,QAAQC,cAAe,CAAEC,aAAa,GAAOlL,SAAA,EAC3EC,EAAAA,EAAAA,KAAC4K,EAAMM,OAAM,CACT9F,KAAK,QACL+F,UAAW9L,EACX+L,QAAS,CAAEH,aAAa,MAE5BjL,EAAAA,EAAAA,KAAC4K,EAAMM,OAAM,CAAC9F,KAAK,OAAO+F,UAAWxJ,KACrC3B,EAAAA,EAAAA,KAAC4K,EAAMM,OAAM,CAAC9F,KAAK,OAAO+F,UAAWvC,KACrC5I,EAAAA,EAAAA,KAAC4K,EAAMM,OAAM,CAAC9F,KAAK,eAAe+F,UAAWvB,KAC7C5J,EAAAA,EAAAA,KAAC4K,EAAMM,OAAM,CAAC9F,KAAK,WAAW+F,UAAWd,QAIzD,G,+CExCA,SAAiB,C,GCAbgB,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CAGAJ,EAAoBO,EAAID,E,MCzBxB,IAAIE,EAAW,GACfR,EAAoBS,EAAI,CAACC,EAAQC,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASC,EAAI,EAAGA,EAAIR,EAAS9F,OAAQsG,IAAK,CAGzC,IAFA,IAAKL,EAAUC,EAAIC,GAAYL,EAASQ,GACpCC,GAAY,EACPC,EAAI,EAAGA,EAAIP,EAASjG,OAAQwG,MACpB,EAAXL,GAAsBC,GAAgBD,IAAahJ,OAAOsJ,KAAKnB,EAAoBS,GAAGW,OAAOC,GAASrB,EAAoBS,EAAEY,GAAKV,EAASO,MAC9IP,EAASW,OAAOJ,IAAK,IAErBD,GAAY,EACTJ,EAAWC,IAAcA,EAAeD,IAG7C,GAAGI,EAAW,CACbT,EAASc,OAAON,IAAK,GACrB,IAAIO,EAAIX,SACET,IAANoB,IAAiBb,EAASa,EAC/B,CACD,CACA,OAAOb,CAnBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAIG,EAAIR,EAAS9F,OAAQsG,EAAI,GAAKR,EAASQ,EAAI,GAAG,GAAKH,EAAUG,IAAKR,EAASQ,GAAKR,EAASQ,EAAI,GACrGR,EAASQ,GAAK,CAACL,EAAUC,EAAIC,EAqBjB,C,KCzBdb,EAAoBwB,EAAKnB,IACxB,IAAIoB,EAASpB,GAAUA,EAAOqB,WAC7B,IAAOrB,EAAiB,QACxB,IAAM,EAEP,OADAL,EAAoB2B,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdzB,EAAoB2B,EAAI,CAACvB,EAASyB,KACjC,IAAI,IAAIR,KAAOQ,EACX7B,EAAoB8B,EAAED,EAAYR,KAASrB,EAAoB8B,EAAE1B,EAASiB,IAC5ExJ,OAAOkK,eAAe3B,EAASiB,EAAK,CAAEW,YAAY,EAAMC,IAAKJ,EAAWR,IAE1E,ECNDrB,EAAoBkC,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOxS,MAAQ,IAAIyS,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,kBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBtC,EAAoB8B,EAAI,CAACS,EAAKC,IAAU3K,OAAO4K,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFxC,EAAoBuB,EAAKnB,IACH,qBAAXwC,QAA0BA,OAAOC,aAC1ChL,OAAOkK,eAAe3B,EAASwC,OAAOC,YAAa,CAAE7N,MAAO,WAE7D6C,OAAOkK,eAAe3B,EAAS,aAAc,CAAEpL,OAAO,GAAO,E,MCA9D,IAAI8N,EAAkB,CACrB,IAAK,GAaN9C,EAAoBS,EAAES,EAAK6B,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4BC,KACvD,IAGIjD,EAAU8C,GAHTpC,EAAUwC,EAAaC,GAAWF,EAGhBlC,EAAI,EAC3B,GAAGL,EAAS0C,MAAM3S,GAAgC,IAAxBoS,EAAgBpS,KAAa,CACtD,IAAIuP,KAAYkD,EACZnD,EAAoB8B,EAAEqB,EAAalD,KACrCD,EAAoBO,EAAEN,GAAYkD,EAAYlD,IAGhD,GAAGmD,EAAS,IAAI1C,EAAS0C,EAAQpD,EAClC,CAEA,IADGiD,GAA4BA,EAA2BC,GACrDlC,EAAIL,EAASjG,OAAQsG,IACzB+B,EAAUpC,EAASK,GAChBhB,EAAoB8B,EAAEgB,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAO/C,EAAoBS,EAAEC,EAAO,EAGjC4C,EAAqBC,KAAsB,gBAAIA,KAAsB,iBAAK,GAC9ED,EAAmBE,QAAQR,EAAqBS,KAAK,KAAM,IAC3DH,EAAmBI,KAAOV,EAAqBS,KAAK,KAAMH,EAAmBI,KAAKD,KAAKH,G,KC7CvF,IAAIK,EAAsB3D,EAAoBS,OAAEN,EAAW,CAAC,MAAM,IAAOH,EAAoB,QAC7F2D,EAAsB3D,EAAoBS,EAAEkD,E","sources":["src/shared/types/actions.ts","src/config/env.ts","src/services/socket.service.ts","src/screens/LoginScreen.tsx","src/screens/HomeScreen.tsx","src/components/GameManagement.tsx","src/components/Card.tsx","src/components/GamePlay.tsx","src/screens/GameScreen.tsx","src/screens/GameCreationScreen.tsx","src/screens/JoinGameScreen.tsx","App.tsx","index.ts","webpack://web/./src/components/Card.web.css?a5d3","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { AvailableGames, GamePhase } from './game-state';\nimport { Card } from './cards';\n\n// Authentication Actions\nexport enum AuthActions {\n    LOGIN = 'auth/login',\n    LOGOUT = 'auth/logout'\n}\n\nexport type LoginPayload = {\n    username: string;\n}\n\nexport type LoginResponse = {\n    success: boolean;\n    error?: string;\n    userId?: string;\n}\n\n// Main Service Actions\nexport enum MainActions {\n    CREATE_GAME = 'main/createGame',\n    JOIN_GAME = 'main/joinGame',\n}\n\nexport type CreateGamePayload = {\n    gameType: AvailableGames;\n}\n\nexport type JoinGamePayload = {\n    gameId: string;\n}\n\n// Game Administrative Actions\nexport enum GameAdminActions {\n    ADD_AGENT = 'game/admin/addAgent',\n    START_GAME = 'game/admin/startGame',\n    KICK_PLAYER = 'game/admin/kickPlayer',\n    LEAVE_GAME = 'game/admin/leaveGame'\n}\n\nexport type KickPlayerPayload = {\n    playerId: string;\n}\n\n// Game Play Actions\nexport enum GamePlayActions {\n    PLAY_CARD = 'game/play/playCard',\n    EXTRA_ACTION = 'game/play/extraAction'\n}\n\nexport interface PlayCardPayload {\n    cardIndex: number;\n    gameId: string;\n}\n\nexport interface ExtraActionPayload {\n    actionType: string;\n    actionData: Record<string, unknown>;\n    gameId: string;\n}\n\n// Server Broadcast Types\nexport enum BroadcastTypes {\n    STATE = 'broadcast/state',\n    GAME_ERROR = 'broadcast/gameError',\n    GAME_ENDED = 'broadcast/gameEnded'\n}\n\nexport interface GameEndedPayload {\n    gameId: string;\n    winner?: string;\n}\n\nexport interface GameErrorPayload {\n    gameId: string;\n    error: string;\n}","const ENV = {\n    development: {\n      socketUrl: 'http://localhost:3000',\n      socketPath: '/socket.io/',\n    },\n    production: {\n      socketUrl: 'https://suecatatau-server-production.up.railway.app',\n      socketPath: '/socket.io/',\n    }\n  };\n  \n  // In development, the app can connect to your local server\n  // In production, it will connect to the Railway server\n  const getEnvironment = () => {\n    // if (__DEV__) {\n    //   return ENV.development;\n    // }\n    return ENV.production;\n  };\n  \n  export default getEnvironment();","import { io, Socket } from 'socket.io-client';\nimport { AvailableGames } from '../shared/types/game-state';\nimport { AuthActions, GamePlayActions, GameAdminActions, MainActions } from '../shared/types/actions';\nimport { BroadcastTypes } from '../shared/types/actions';\nimport { GameBroadcastState } from '../shared/types/game-state';\nimport config from '../config/env';\n\ninterface LoginResponse {\n    success: boolean;\n    userId?: string;\n    error?: string;\n}\n\ninterface GameResponse {\n    success: boolean;\n    gameId?: string;\n    error?: string;\n}\n\nexport class SocketService {\n    private socket: Socket;\n    private static instance: SocketService;\n    private currentUser: { username: string; userId: string } | null = null;\n    private reconnectAttempts: number = 0;\n    private readonly MAX_RECONNECT_ATTEMPTS = 5;\n\n    private constructor() {\n        this.socket = io(config.socketUrl, {\n            transports: ['websocket', 'polling'],\n            path: config.socketPath,\n            autoConnect: false,\n            reconnection: true,\n            reconnectionAttempts: this.MAX_RECONNECT_ATTEMPTS,\n            reconnectionDelay: 1000,\n            timeout: 10000\n        });\n\n        console.log('SocketService constructor called, connecting to:', config.socketUrl);\n        \n        this.setupSocketListeners();\n    }\n\n    private setupSocketListeners() {\n        this.socket.on('connect', () => {\n            console.log('Socket CONNECTED, ID:', this.socket.id);\n            this.reconnectAttempts = 0;\n        });\n\n        this.socket.on('disconnect', (reason) => {\n            console.log('Socket DISCONNECTED, was ID:', this.socket.id, 'Reason:', reason);\n            if (reason === 'io server disconnect') {\n                // the disconnection was initiated by the server, reconnect manually\n                this.socket.connect();\n            }\n        });\n\n        this.socket.on('connect_error', (error) => {\n            console.error('Connection error:', error);\n            this.reconnectAttempts++;\n            \n            if (this.reconnectAttempts >= this.MAX_RECONNECT_ATTEMPTS) {\n                console.error('Max reconnection attempts reached');\n                this.socket.disconnect();\n            }\n        });\n\n        this.socket.on('reconnect', (attemptNumber) => {\n            console.log('Socket RECONNECTED, new ID:', this.socket.id, 'Attempt:', attemptNumber);\n        });\n\n        this.socket.on('reconnect_attempt', (attemptNumber) => {\n            console.log('Socket RECONNECTING, attempt:', attemptNumber);\n        });\n\n        this.socket.on(BroadcastTypes.STATE, (state: GameBroadcastState) => {\n            console.log('Received state update for socket ID:', this.socket.id);\n        });\n    }\n\n    public static getInstance(): SocketService {\n        if (!SocketService.instance) {\n            SocketService.instance = new SocketService();\n        }\n        return SocketService.instance;\n    }\n\n    public connect(playerName: string): Promise<void> {\n        console.log('Connect called, current socket ID:', this.socket.id);\n        return new Promise((resolve, reject) => {\n            if (this.socket.connected) {\n                console.log('Socket already connected with ID:', this.socket.id);\n                resolve();\n                return;\n            }\n            \n            this.socket.connect();\n            this.socket.on('connect', () => {\n                console.log('Connected to server with ID:', this.socket.id);\n                resolve();\n            });\n            \n            this.socket.on('connect_error', (error) => {\n                reject(error);\n            });\n        });\n    }\n\n    public createGame(playerName: string, gameType: AvailableGames): Promise<GameResponse> {\n        return new Promise<GameResponse>((resolve, reject) => {\n            console.log('Emitting createGame event with playerName:', playerName,\n                'and gameType:', gameType);\n\n            const timeout = setTimeout(() => {\n                reject(new Error('createGame timeout'));\n            }, 5000);\n\n            this.socket.emit(MainActions.CREATE_GAME, { playerName, gameType }, (response: GameResponse) => {\n                console.log('Received response from createGame:', response);\n                clearTimeout(timeout);\n                resolve(response);\n            });\n\n            this.socket.on('error', (error) => {\n                console.error('Socket error:', error);\n                reject(error);\n            });\n        });\n    }\n\n    public joinGame(gameId: string, playerName: string): Promise<{ success: boolean }> {\n        return new Promise<{ success: boolean }>((resolve, reject) => {\n            console.log('Emitting joinGame event with gameId:', gameId, 'playerName:', playerName);\n\n            // Add timeout to detect if callback never happens\n            const timeout = setTimeout(() => {\n                reject(new Error('joinGame timeout'));\n            }, 5000);\n\n            this.socket.emit(MainActions.JOIN_GAME, { gameId, playerName }, (response: { success: boolean }) => {\n                console.log('Received response from joinGame:', response);\n                clearTimeout(timeout);\n                resolve(response);\n            });\n\n            // Add error handler\n            this.socket.on('error', (error) => {\n                console.error('Socket error:', error);\n                reject(error);\n            });\n        });\n    }\n\n    public addAgent(gameId: string): Promise<{ success: boolean }> {\n        return new Promise((resolve) => {\n            this.socket.emit(GameAdminActions.ADD_AGENT, { gameId }, (response: { success: boolean }) => {\n                resolve(response);\n            });\n        });\n    }\n\n    public startGame(gameId: string): Promise<{ success: boolean }> {\n        return new Promise((resolve) => {\n            this.socket.emit(GameAdminActions.START_GAME, { gameId }, (response: { success: boolean }) => {\n                resolve(response);\n            });\n        });\n    }\n\n    public playCard(gameId: string, cardIndex: number): Promise<{ success: boolean }> {\n        return new Promise((resolve) => {\n            this.socket.emit(GamePlayActions.PLAY_CARD, { gameId, cardIndex }, (response: { success: boolean }) => {\n                resolve(response);\n            });\n        });\n    }\n\n    public onGameState(callback: (state: GameBroadcastState) => void) {\n\n        console.log('Setting up game state listener for socket:', {\n            socketId: this.socket.id,\n            userId: this.currentUser?.userId,\n            connected: this.socket.connected\n        });\n    \n        this.socket.onAny((eventName, ...args) => {\n            console.log('Received event:', eventName, 'Socket ID:', this.socket.id, 'Args:', args);\n        });\n    \n        this.socket.on(BroadcastTypes.STATE, (state: GameBroadcastState) => {\n            console.log('Received game state for socket:', {\n                socketId: this.socket.id,\n                userId: this.currentUser?.userId,\n                state\n            });\n            callback(state);\n        });    \n\n        this.socket.on('connect', () => {\n            console.log('Socket connected:', this.socket.id);\n        });\n\n        this.socket.on('disconnect', () => {\n            console.log('Socket disconnected');\n        });\n    }\n\n    public disconnect() {\n        this.socket.disconnect();\n    }\n\n    public login(username: string): Promise<LoginResponse> {\n        return new Promise((resolve) => {\n            this.socket.connect();\n            console.log('Logging in with socket ID:', this.socket.id);\n            \n            this.socket.emit(AuthActions.LOGIN, { username }, (response: LoginResponse) => {\n                console.log('Login response received for socket:', {\n                    socketId: this.socket.id,\n                    response\n                });\n                if (response.success) {\n                    this.setCurrentUser(username, response.userId!);\n                } else {\n                    this.socket.disconnect();\n                }\n                resolve(response);\n            });\n        });\n    }\n\n    public extraAction(gameId: string, actionType: string, actionData: any): Promise<GameResponse> {\n        return new Promise((resolve) => {\n            this.socket.emit(GamePlayActions.EXTRA_ACTION, { \n                gameId, \n                actionType, \n                actionData \n            }, (response: GameResponse) => {\n                resolve(response);\n            });\n        });\n    }\n\n    public setCurrentUser(username: string, userId: string) {\n        this.currentUser = { username, userId };\n    }\n\n    public getCurrentUser() {\n        return this.currentUser;\n    }\n\n    public clearCurrentUser() {\n        this.currentUser = null;\n    }\n\n    public async logout(): Promise<void> {\n        if (this.currentUser) {\n            await new Promise<void>((resolve) => {\n                this.socket.emit(AuthActions.LOGOUT, {}, () => {\n                    this.clearCurrentUser();\n                    this.socket.disconnect();\n                    resolve();\n                });\n            });\n        }\n    }\n}\n","import React, { useState } from 'react';\nimport { View, TextInput, Button, StyleSheet, Text, Alert } from 'react-native';\nimport { SocketService } from '../services/socket.service';\n\nexport const LoginScreen: React.FC<{ navigation: any }> = ({ navigation }) => {\n    const [username, setUsername] = useState('');\n    const socketService = SocketService.getInstance();\n\n    const handleLogin = async () => {\n        if (!username.trim()) {\n            Alert.alert('Error', 'Please enter a username');\n            return;\n        }\n\n        try {\n            console.log('Logging in with username:', username);\n            const response = await socketService.login(username);\n            if (response.success) {\n                // Store the username globally in the SocketService\n                socketService.setCurrentUser(username, response.userId!);\n                console.log('Login successful. Navigating to Home.');\n                navigation.replace('Home'); // Using replace to prevent going back to login\n            } else {\n                console.log('Login failed:', response.error || 'Username already taken');\n                Alert.alert('Login Failed', response.error || 'Username already taken');\n            }\n        } catch (error) {\n            Alert.alert('Error', 'Failed to connect to server');\n        }\n    };\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.title}>Welcome to Card Game</Text>\n            <TextInput\n                style={styles.input}\n                placeholder=\"Enter your username\"\n                value={username}\n                onChangeText={setUsername}\n                autoFocus\n            />\n            <Button title=\"Login\" onPress={handleLogin} />\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 20,\n        justifyContent: 'center',\n    },\n    title: {\n        fontSize: 24,\n        textAlign: 'center',\n        marginBottom: 30,\n    },\n    input: {\n        borderWidth: 1,\n        borderColor: '#ddd',\n        padding: 10,\n        marginBottom: 20,\n        borderRadius: 5,\n    },\n}); ","import React from 'react';\nimport { View, Text, Button, StyleSheet } from 'react-native';\nimport { SocketService } from '../services/socket.service';\n\nexport const HomeScreen: React.FC<{ navigation: any }> = ({ navigation }) => {\n    const socketService = SocketService.getInstance();\n    const username = socketService.getCurrentUser()?.username;\n\n    const handleCreateGame = () => {\n        console.log('Creating game');\n        navigation.navigate('GameCreation', { playerName: username });\n    };\n\n    const handleJoinGame = () => {\n        console.log('Joining game');\n        navigation.navigate('JoinGame', { playerName: username });\n    };\n\n    const handleLogout = async () => {\n        await socketService.logout();\n        navigation.replace('Login');\n    };\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.welcome}>Welcome, {username}!</Text>\n            <View style={styles.buttonContainer}>\n                <Button title=\"Create Game\" onPress={handleCreateGame} />\n                <Button title=\"Join Game\" onPress={handleJoinGame} />\n                <Button title=\"Logout\" onPress={handleLogout} color=\"red\" />\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 20,\n        justifyContent: 'center',\n    },\n    welcome: {\n        fontSize: 24,\n        textAlign: 'center',\n        marginBottom: 30,\n    },\n    buttonContainer: {\n        gap: 10,\n    },\n});\n","import React from 'react';\nimport { View, Button, Text, StyleSheet } from 'react-native';\nimport { GameManagementProps } from '../types/game-ui';\n\nexport const GameManagement: React.FC<GameManagementProps> = ({\n    gameId,\n    onAddAgent,\n    onStartGame,\n    playerCount\n}) => {\n    return (\n        <View style={styles.container}>\n            <Text style={styles.subtitle}>Game Setup</Text>\n            <Text>Players: {playerCount}</Text>\n            <View style={styles.controls}>\n                <Button title=\"Add AI Player\" onPress={onAddAgent} />\n                {playerCount >= 2 && (\n                    <Button title=\"Start Game\" onPress={onStartGame} />\n                )}\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 20,\n    },\n    subtitle: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 10,\n    },\n    controls: {\n        flexDirection: 'column',\n        justifyContent: 'space-around',\n        marginTop: 20,\n    }\n});","import React from 'react';\nimport { TouchableOpacity, Text, StyleSheet, Platform } from 'react-native';\nimport { Card } from '../shared/types/game-state';\n\nif (Platform.OS === 'web') {\n    require('./Card.web.css');\n}\n\ninterface CardProps {\n    card: Card;\n    onPress?: () => void;\n    disabled?: boolean;\n}\n\nexport const CardRender: React.FC<CardProps> = ({ card, onPress, disabled }) => {\n    const suitSymbols = {\n        hearts: '♥',\n        diamonds: '♦',\n        clubs: '♣',\n        spades: '♠'\n    };\n\n    const valueMap: { [key: number]: string } = {\n        11: 'J',\n        12: 'Q',\n        13: 'K',\n        14: 'A'\n    };\n\n    const isRed = card.suit === 'hearts' || card.suit === 'diamonds';\n\n    return (\n        <TouchableOpacity\n            style={[styles.card, disabled && styles.disabled]}\n            // @ts-ignore\n            className={Platform.OS === 'web' ? 'card-hover' : undefined}\n            onPress={onPress}\n            disabled={disabled}\n            // @ts-ignore\n            {...(Platform.OS === 'web' && {\n                style: [\n                    styles.card,\n                    disabled && styles.disabled,\n                    { cursor: 'pointer' }\n                ]\n            })}\n        >\n            <Text style={[styles.value, isRed && styles.redText]}>\n                {valueMap[card.value] || card.value}\n            </Text>\n            <Text style={[styles.suit, isRed && styles.redText]}>\n                {suitSymbols[card.suit]}\n            </Text>\n        </TouchableOpacity>\n    );\n};\n\nconst styles = StyleSheet.create({\n    card: {\n        width: 60,\n        height: 90,\n        backgroundColor: 'white',\n        borderRadius: 8,\n        borderWidth: 1,\n        borderColor: '#ddd',\n        padding: 5,\n        margin: 2,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    disabled: {\n        opacity: 0.5,\n    },\n    value: {\n        fontSize: 24,\n        color: 'black',\n    },\n    suit: {\n        fontSize: 32,\n        color: 'black',\n    },\n    redText: {\n        color: 'red',\n    },\n});","import React from 'react';\nimport { View, Button, Text, ScrollView, StyleSheet, ViewStyle } from 'react-native';\nimport { CardRender } from './Card';\nimport { GameBroadcastState } from '../shared/types/game-state';\nimport { Card } from '../shared/types/game-state';\n\ninterface GamePlayProps {\n    gameState: GameBroadcastState;\n    playerName: string;\n    playerId: string;\n    onPlayCard: (index: number) => void;\n    onExtraAction: (actionType: string, actionData: any) => void;\n}\n\nexport const GamePlay: React.FC<GamePlayProps> = ({\n    gameState,\n    playerName,\n    playerId,\n    onPlayCard,\n    onExtraAction\n}) => {\n    const currentPlayerIndex = gameState.public.currentPlayerIndex;\n    const currentPlayerId = gameState.public.players[currentPlayerIndex].id;\n    const isCurrentPlayer = currentPlayerId === playerId;\n    const isResolvingTrick = gameState.public.gameSpecificData?.isResolvingTrick;\n    const hand = gameState.private?.hand || [];\n    const currentTrick = gameState.public.gameSpecificData?.currentTrick || [];\n    const scores = gameState.public.gameSpecificData?.scores || [];\n    const canToggle = gameState.public.gameSpecificData?.canToggle;\n    const trumpCard = gameState.public.gameSpecificData?.trumpCard;\n    const trumpHolder = gameState.public.gameSpecificData?.trumpHolder;\n\n    // Render cards in hand\n    const renderHand = () => (\n        <ScrollView horizontal style={styles.hand}>\n            {hand.map((card: any, index: number) => (\n                <CardRender\n                    key={index}\n                    card={card}\n                    onPress={() => isCurrentPlayer && onPlayCard(index)}\n                />\n            ))}\n        </ScrollView>\n    );\n\n    // Render current trick\n    const renderCurrentTrick = () => {\n        const myPlayerIndex = gameState.public.players.findIndex(p => p.id === playerId);\n        const numPlayers = gameState.public.players.length;\n        const TABLE_RADIUS = 80; // Smaller radius for the trick cards\n\n        const getCardPosition = (playerIndex: number): ViewStyle => {\n            const relativePos = (playerIndex - myPlayerIndex + numPlayers) % numPlayers;\n            const angle = -Math.PI/2 - (relativePos * 2 * Math.PI / numPlayers);\n            const x = TABLE_RADIUS * Math.cos(angle);\n            const y = TABLE_RADIUS * Math.sin(angle);\n\n            return {\n                position: 'absolute',\n                left: '50%',\n                top: '50%',\n                transform: [\n                    { translateX: -x },\n                    { translateY: -y },\n                    { rotate: `${angle + Math.PI/2}rad` }\n                ] as any[]\n            };\n        };\n\n        return (\n            <View style={styles.trickContainer}>\n                <View style={styles.trickTable}>                    \n                    {/* Render cards if they exist */}\n                    {currentTrick?.map(({playerId: cardPlayerId, card}: {playerId: string, card: Card}) => {\n                        const playerIndex = gameState.public.players.findIndex(p => p.id === cardPlayerId);\n                        return (\n                            <View \n                                key={cardPlayerId} \n                                style={[styles.trickCardContainer, getCardPosition(playerIndex)]}\n                            >\n                                <CardRender card={card} />\n                            </View>\n                        );\n                    })}\n                </View>\n            </View>\n        );\n    };\n\n    // Render players\n    const renderPlayers = () => {\n        const myPlayerIndex = gameState.public.players.findIndex(p => p.id === playerId);\n        const numPlayers = gameState.public.players.length;\n        const PLAYER_RADIUS = 160; // Larger radius for the players\n\n        const getPlayerPosition = (playerIndex: number): ViewStyle => {\n            const relativePos = (playerIndex - myPlayerIndex + numPlayers) % numPlayers;\n            const angle = -Math.PI/2 - (relativePos * 2 * Math.PI / numPlayers);\n            const x = PLAYER_RADIUS * Math.cos(angle);\n            const y = PLAYER_RADIUS * Math.sin(angle);\n\n            return {\n                position: 'absolute',\n                left: '50%',\n                top: '50%',\n                transform: [\n                    { translateX: -x },\n                    { translateY: -y }\n                ] as any[]\n            };\n        };\n\n        return (\n            <View style={styles.playerTable}>\n                {gameState.public.players.map((player, index) => {\n                    const playerScore = gameState.public.gameSpecificData?.scores?.find(\n                        (score: {playerId: string, score: number}) => score.playerId === player.id\n                    )?.score || 0;\n\n                    return (\n                        <View \n                            key={player.id}\n                            style={[styles.playerInfo, getPlayerPosition(index)]}\n                        >\n                            <Text style={[\n                                styles.playerNameFixed,\n                                player.id === playerId && styles.currentPlayerName\n                            ]}>\n                                {player.name}\n                            </Text>\n                            <Text style={styles.playerStats}>\n                                Points: {playerScore}\n                            </Text>\n                        </View>\n                    );\n                })}\n            </View>\n        );\n    };\n\n    // Render extra action button if available\n    const renderExtraAction = () => {\n        if (!isCurrentPlayer || !canToggle || !onExtraAction) return null;\n        return (\n            <View style={styles.extraActionContainer}>\n                <Button\n                    title={`Toggle ${gameState.public.gameSpecificData?.isHighWins ? 'High' : 'Low'} Wins`}\n                    onPress={() => onExtraAction('TOGGLE_WIN_CONDITION', {})}\n                />\n            </View>\n        );\n    };\n\n    // Add new function to render trump info\n    const renderTrumpInfo = () => {\n        if (!trumpCard || !trumpHolder) return null;\n        \n        const trumpHolderName = gameState.public.players.find(p => p.id === trumpHolder)?.name;\n        \n        return (\n            <View style={styles.trumpInfo}>\n                <Text style={styles.trumpTitle}>Trump Card:</Text>\n                <CardRender card={trumpCard} />\n                <Text style={styles.trumpHolder}>Held by: {trumpHolderName}</Text>\n            </View>\n        );\n    };\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.status}>\n                {isResolvingTrick \n                    ? \"Resolving trick...\" \n                    : isCurrentPlayer \n                        ? \"Your turn!\" \n                        : `Waiting for ${gameState.public.players[currentPlayerIndex].name}`}\n            </Text>\n            <View style={styles.gameArea}>\n                {renderTrumpInfo()}\n                {renderPlayers()}\n                {renderCurrentTrick()}\n            </View>\n            <View style={styles.handContainer}>\n                <Text style={styles.subtitle}>Your Hand:</Text>\n                {renderHand()}\n                {renderExtraAction()}\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    status: {\n        fontSize: 16,\n        marginBottom: 20,\n    },\n    subtitle: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 10,\n    },\n    trickContainer: {\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    trickTable: {\n        width: 200,  // Smaller fixed size for the table\n        height: 200,\n        position: 'relative',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    tableBackground: {\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n        borderRadius: 100,\n        backgroundColor: '#1B5E20',  // Dark green for table felt\n        borderWidth: 4,\n        borderColor: '#4A3211',  // Brown for table edge\n    },\n    trickCardContainer: {\n        position: 'absolute',\n        alignItems: 'center',\n        width: 70,\n        height: 100,\n    },\n    playerName: {\n        fontSize: 12,\n        marginTop: 5,\n        textAlign: 'center',\n        transform: [{ rotate: '0deg' }] as any[] // Type assertion for transform\n    },\n    handContainer: {\n        marginTop: 'auto',\n    },\n    hand: {\n        flexGrow: 0,\n        height: 100,\n        marginBottom: 10,\n    },\n    extraActionContainer: {\n        marginTop: 10,\n        marginBottom: 20,\n    },\n    gameArea: {\n        flex: 1,\n        position: 'relative',\n        marginVertical: 20,\n    },\n    playerTable: {\n        width: 400,  // Larger than trickTable\n        height: 400,\n        position: 'relative',\n        alignSelf: 'center',\n    },\n    playerInfo: {\n        position: 'absolute',\n        alignItems: 'center',\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\n        padding: 8,\n        borderRadius: 8,\n        minWidth: 100,\n        borderWidth: 1,\n        borderColor: '#ccc',\n    },\n    playerNameFixed: {\n        fontSize: 14,\n        fontWeight: 'bold',\n        marginBottom: 4,\n    },\n    currentPlayerName: {\n        color: '#2196F3',  // or any color you prefer\n    },\n    playerStats: {\n        fontSize: 12,\n        color: '#666',\n    },\n    trumpInfo: {\n        position: 'absolute',\n        top: 10,\n        right: 10,\n        alignItems: 'center',\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\n        padding: 8,\n        borderRadius: 8,\n        borderWidth: 1,\n        borderColor: '#ccc',\n    },\n    trumpTitle: {\n        fontSize: 14,\n        fontWeight: 'bold',\n        marginBottom: 4,\n    },\n    trumpHolder: {\n        fontSize: 12,\n        color: '#666',\n        marginTop: 4,\n    },\n}); ","import React, { useEffect, useState } from 'react';\nimport { View, Text, Button, ScrollView, StyleSheet } from 'react-native';\nimport { SocketService } from '../services/socket.service';\nimport { GameScreenState } from '../types/game-ui';\nimport { GameManagement } from '../components/GameManagement';\nimport { GamePlay } from '../components/GamePlay';\nimport { GameBroadcastState } from '../shared/types/game-state';\n\ninterface GameScreenProps {\n    route: any;\n}\n\nexport const GameScreen: React.FC<GameScreenProps> = ({ route }) => {\n    const { gameId, playerName } = route.params;\n    const [gameState, setGameState] = useState<GameBroadcastState | null>(null);\n    const [screenState, setScreenState] = useState<GameScreenState>({\n        mode: 'management',\n        isCurrentPlayer: false\n    });\n    const socketService = SocketService.getInstance();\n\n    console.log('GameScreen mounted with gameId:', gameId, 'and playerName:', playerName);\n\n    useEffect(() => {\n        console.log('useEffect called');\n        socketService.onGameState((state: GameBroadcastState) => {\n            console.log('Game state received:', state);\n            setGameState(state);\n            \n            setScreenState(prev => ({\n                ...prev,\n                mode: state.public.phase === 'PLAYING' ? 'playing' : 'management',\n                isCurrentPlayer: state.public.players[state.public.currentPlayerIndex]?.name === playerName\n            }));\n        });\n\n        return () => {\n            socketService.disconnect();\n        };\n    }, []);\n\n    const handleAddAgent = () => {\n        socketService.addAgent(gameId);\n    };\n\n    const handleStartGame = () => {\n        socketService.startGame(gameId);\n    };\n\n    const handlePlayCard = (cardIndex: number) => {\n        socketService.playCard(gameId, cardIndex);\n    };\n\n    const handleExtraAction = (actionType: string, actionData: any) => {\n        socketService.extraAction(gameId, actionType, actionData);\n    };\n\n    if (!gameState) {\n        return <Text>Loading...</Text>;\n    }\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.title}>Game Room: {gameId}</Text>\n            \n            {screenState.mode === 'management' ? (\n                <GameManagement\n                    gameId={gameId}\n                    onAddAgent={handleAddAgent}\n                    onStartGame={handleStartGame}\n                    playerCount={gameState.public.players.length}\n                />\n            ) : (\n                <GamePlay\n                    gameState={gameState}\n                    playerName={playerName}\n                    playerId={socketService.getCurrentUser()?.userId || ''}\n                    onPlayCard={handlePlayCard}\n                    onExtraAction={handleExtraAction}\n                />\n            )}\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 20,\n    },\n    title: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginBottom: 20,\n    },\n    subtitle: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 10,\n    },\n    controls: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        marginBottom: 20,\n    },\n    status: {\n        fontSize: 16,\n        marginBottom: 20,\n    },\n    trickContainer: {\n        marginBottom: 20,\n    },\n    trick: {\n        flexGrow: 0,\n        height: 100,\n    },\n    handContainer: {\n        marginTop: 'auto',\n    },\n    hand: {\n        flexGrow: 0,\n        height: 100,\n    },\n    scoreboard: {\n        marginTop: 20,\n    },\n});\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Button } from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport { SocketService } from '../services/socket.service';\nimport { AvailableGames } from '../shared/types/game-state';\n\nconst GAME_TYPES: AvailableGames[] = ['HIGH_CARD', 'HIGH_LOW_CARD', 'SUECA'];\n\nexport const GameCreationScreen: React.FC<{ route: any, navigation: any }> =\n    ({route, navigation}) => {\n        console.log('GameCreationScreen rendered');\n        console.log('Route params:', route.params);\n        const { playerName } = route.params;\n        const socketService = SocketService.getInstance();\n        const [gameType, setGameType] = useState<AvailableGames>('HIGH_CARD');\n    \n        const handleCreateGame = async () => {\n            console.log('Creating game');\n            await socketService.connect(playerName);\n            console.log('Connected to socket');\n            const response = await socketService.createGame(playerName, gameType);\n            if (response.success && response.gameId) {\n                console.log('Game created successfully');\n                navigation.navigate('Game', { gameId: response.gameId, playerName });\n            }\n        };\n\n        return (\n            <View style={{ padding: 20 }}>\n                <Text style={{ fontSize: 24, marginBottom: 20 }}>Game Creation</Text>\n                <View style={{ marginBottom: 20 }}>\n                    <Text style={{ marginBottom: 10 }}>Select Game Type:</Text>\n                    <Picker\n                        selectedValue={gameType}\n                        onValueChange={(itemValue: AvailableGames) => setGameType(itemValue)}\n                        style={{ backgroundColor: '#f0f0f0', padding: 10 }}\n                    >\n                        {GAME_TYPES.map((game) => (\n                            <Picker.Item \n                                key={game} \n                                label={game.replace('_', ' ')} \n                                value={game}\n                            />\n                        ))}\n                    </Picker>\n                </View>\n                <Button title=\"Create Game\" onPress={handleCreateGame} />\n            </View>\n        );\n    }","import React, { useState } from 'react';\nimport { View, TextInput, Button, StyleSheet } from 'react-native';\nimport { SocketService } from '../services/socket.service';\n\n\nexport const JoinGameScreen: React.FC<{ route: any, navigation: any }> =\n    ({route, navigation}) => {\n\n        const { playerName } = route.params;\n        const socketService = SocketService.getInstance();\n        const [gameId, setGameId] = useState('');\n\n        const handleJoinGame = async () => {\n            await socketService.connect(playerName);\n            await socketService.joinGame(gameId, playerName);\n            navigation.navigate('Game', { gameId, playerName });\n        };\n\n        return (\n            <View style={styles.container}>\n                <TextInput\n                    style={styles.input}\n                    placeholder=\"Enter game identifier\"\n                    onChangeText={(text) => setGameId(text)}\n                />\n                <Button title=\"Join Game\" onPress={handleJoinGame} />\n            </View>\n        );\n    }\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 20,\n        justifyContent: 'center',\n    },\n    input: {\n        borderWidth: 1,\n        borderColor: '#ddd',\n        padding: 10,\n        marginBottom: 20,\n        borderRadius: 5,\n    },\n    buttonContainer: {\n        gap: 10,\n    },\n});\n    ","import React from 'react';\nimport { Platform } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { LoginScreen } from './src/screens/LoginScreen';\nimport { HomeScreen } from './src/screens/HomeScreen';\nimport { GameScreen } from './src/screens/GameScreen';\nimport { GameCreationScreen } from './src/screens/GameCreationScreen';\nimport { JoinGameScreen } from './src/screens/JoinGameScreen';\n\n// Define the type for our route parameters\ntype RootStackParamList = {\n    Login: undefined;\n    Home: undefined;\n    Game: { gameId: string };\n    GameCreation: undefined;\n    JoinGame: undefined;\n};\n\nconst WebStack = createStackNavigator<RootStackParamList>();\nconst NativeStack = createNativeStackNavigator<RootStackParamList>();\n\nexport default function App() {\n    const Stack = Platform.OS === 'web' ? WebStack : NativeStack;\n\n    return (\n        <NavigationContainer>\n            <Stack.Navigator initialRouteName=\"Login\" screenOptions={{ headerShown: true }}>\n                <Stack.Screen \n                    name=\"Login\" \n                    component={LoginScreen}\n                    options={{ headerShown: false }}\n                />\n                <Stack.Screen name=\"Home\" component={HomeScreen} />\n                <Stack.Screen name=\"Game\" component={GameScreen} />\n                <Stack.Screen name=\"GameCreation\" component={GameCreationScreen} />\n                <Stack.Screen name=\"JoinGame\" component={JoinGameScreen} />\n            </Stack.Navigator>\n        </NavigationContainer>\n    );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","// extracted by mini-css-extract-plugin\nexport default {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [191], () => (__webpack_require__(4184)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["AuthActions","MainActions","GameAdminActions","GamePlayActions","BroadcastTypes","socketUrl","socketPath","SocketService","currentUser","reconnectAttempts","MAX_RECONNECT_ATTEMPTS","constructor","this","socket","io","config","transports","path","autoConnect","reconnection","reconnectionAttempts","reconnectionDelay","timeout","console","log","setupSocketListeners","on","id","reason","connect","error","disconnect","attemptNumber","STATE","state","getInstance","instance","playerName","Promise","resolve","reject","connected","createGame","gameType","setTimeout","Error","emit","CREATE_GAME","response","clearTimeout","joinGame","gameId","JOIN_GAME","addAgent","ADD_AGENT","startGame","START_GAME","playCard","cardIndex","PLAY_CARD","onGameState","callback","socketId","userId","onAny","eventName","args","login","username","LOGIN","success","setCurrentUser","extraAction","actionType","actionData","EXTRA_ACTION","getCurrentUser","clearCurrentUser","logout","LOGOUT","LoginScreen","navigation","setUsername","useState","socketService","_jsxs","View","style","styles","container","children","_jsx","Text","title","TextInput","input","placeholder","value","onChangeText","autoFocus","Button","onPress","async","trim","replace","Alert","alert","StyleSheet","create","flex","padding","justifyContent","fontSize","textAlign","marginBottom","borderWidth","borderColor","borderRadius","HomeScreen","welcome","buttonContainer","handleCreateGame","navigate","handleJoinGame","color","gap","GameManagement","onAddAgent","onStartGame","playerCount","subtitle","controls","fontWeight","flexDirection","marginTop","require","CardRender","card","disabled","isRed","suit","TouchableOpacity","Object","assign","className","cursor","redText","hearts","diamonds","clubs","spades","width","height","backgroundColor","margin","alignItems","opacity","GamePlay","gameState","playerId","onPlayCard","onExtraAction","currentPlayerIndex","public","isCurrentPlayer","players","isResolvingTrick","gameSpecificData","hand","private","currentTrick","canToggle","trumpCard","trumpHolder","status","name","gameArea","renderTrumpInfo","trumpHolderName","find","p","trumpInfo","trumpTitle","renderPlayers","myPlayerIndex","findIndex","numPlayers","length","getPlayerPosition","playerIndex","relativePos","angle","Math","PI","position","left","top","transform","translateX","cos","translateY","sin","playerTable","map","player","index","playerScore","scores","score","playerInfo","playerNameFixed","currentPlayerName","playerStats","renderCurrentTrick","getCardPosition","rotate","trickContainer","trickTable","cardPlayerId","trickCardContainer","handContainer","ScrollView","horizontal","extraActionContainer","isHighWins","tableBackground","flexGrow","marginVertical","alignSelf","minWidth","right","GameScreen","route","params","setGameState","screenState","setScreenState","mode","useEffect","prev","phase","handleAddAgent","handleStartGame","handleExtraAction","trick","scoreboard","GAME_TYPES","GameCreationScreen","setGameType","Picker","selectedValue","onValueChange","itemValue","game","Item","label","JoinGameScreen","setGameId","text","WebStack","createStackNavigator","createNativeStackNavigator","registerRootComponent","Stack","NavigationContainer","Navigator","initialRouteName","screenOptions","headerShown","Screen","component","options","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}